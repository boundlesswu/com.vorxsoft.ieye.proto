syntax = "proto3";

import "event-service.proto";

package com.vorxsoft.ieye.proto;
option java_multiple_files = true;
option java_outer_classname = "IA";

message IAAGInfo {
    int32 id = 1;
    string name = 2;
    string ipEx = 3;
    string ipIn = 4;
    int32 port = 5;
}

message IAUInfo {
    int32 id = 1;
    string name = 2;
    string protocolType = 3;
    string channelNum = 4;
    string ip = 5;
    int32 port = 6;
}

message QueryIAAGRequest {
    string ip = 1;
    int32 port = 2;
}

message QueryIAAGResponse {
    IAAGInfo iaagInfo = 1;
}

message QueryIAUListRequest {
    string ip = 1;
    int32 port = 2;
}
message QueryIAUListResponse {
    repeated IAUInfo iauList = 1;
}
enum StateType {
    IAStateTypeIAAG = 0;
    IAStateTypeIAU = 1;
}
message SentState {
    StateType type = 1;
    int32 id = 2;
    int32 maxCnt = 3;
    int32 curCnt = 4;
}

message SentStateRequest {
    repeated SentState stateList = 1;
}
message SentStateResponse {
    StateType type = 1;
    int32 id = 2;
    bool result = 3;
}

enum IACMDType {
    Start = 0;
    Stop = 1;
}
message Point {
    float x = 1;
    float y = 2;
}
//message ResResolution {
//    uint32 x = 1;
//    uint32 y = 2;
//}

message Zoom {
    repeated Point  points = 1;
    bool isAnalysis = 2; //true:分析区域 false:忽略区域
}

message ResInfo {
    int32 resourceId = 1; //资源ID
    string resourceNo = 2; //资源编号
    int32 deviceId = 3; //设备ID
    string deviceNo = 4; //设备编号
    string resourceUid = 5; //资源UID
    //ResResolution resolution = 6; //资源分辨率
    repeated Zoom zoom =6;//分析或者忽略区域
}

message SentIACMDRequest {
    int32 cmdId = 1;
    repeated ResInfo resInfoList = 2;
    IACMDType cmdType = 3;
}
message SentIACMDResponse {
    int32 cmdId = 1;
    bool result = 2;
}

message IAU4Res {
    string rNo = 1;
    int32 IAUId = 2;
    string ip = 3;
    string port = 4;
    string rPort = 5;
}

message SentIACMDReslutRequest {
    int32 cmdId = 1;
    repeated IAU4Res iauRes = 2;
}
message SentIACMDReslutResponse {
    int32 cmdId = 1;
    bool result = 2;
}
message SentIAIntervalRequest {
    int32 cmdId = 1;
    VSEventType type = 2;
    int32 interval = 3;
}
message SentIAIntervalResponse {
    int32 cmdId = 1;
    bool result = 2;
}
//service IAQueryService {
//    //request or response must be message
//    rpc QueryIAAG(QueryIAAGRequest) returns(QueryIAAGResponse);
//    rpc QueryIAUList(QueryIAUListRequest) returns(QueryIAUListResponse);
//}
//service EXEIACMDResultService{
//    rpc SentIACMDReslut(SentIACMDReslutRequest) returns(SentIACMDReslutResponse);
//}
//service UpdateStateService{
//    rpc SentState(SentStateRequest) returns(SentStateResponse);
//}
//service IACMDService{
//    rpc SentIACMD(SentIACMDRequest) returns(SentIACMDResponse);
//}

service VSIAService {
    rpc QueryIAAG (QueryIAAGRequest) returns (QueryIAAGResponse);
    rpc QueryIAUList (QueryIAUListRequest) returns (QueryIAUListResponse);
    rpc SentState (SentStateRequest) returns (SentStateResponse);
    rpc SentIACMD (SentIACMDRequest) returns (SentIACMDResponse);
    //send interval to iaag
    rpc SentIAInterval (SentIAIntervalRequest) returns (SentIAIntervalResponse);
    rpc SentIACMDReslut (SentIACMDReslutRequest) returns (SentIACMDReslutResponse);
}